{"version":3,"sources":["components/SearchBox.js","components/RepoDetails.js","components/UserDetails.js","components/ErrorBoundary.js","App.js","serviceWorker.js","index.js"],"names":["SearchBox","search","submit","className","onSubmit","id","type","placeholder","onChange","RepoDetails","repo_name","fork_count","star_count","description","darkOrwhite","length","map","repo","index","Fragment","key","UserDetails","username","followers","repo_count","user_dp","following","src","alt","ErrorBoundary","props","state","hasError","error","errorInfo","console","this","children","React","Component","darkStyle","body","color","backgroundImage","backgroundColor","textShadow","App","getUserDetails","url","fetch","then","res","json","data","setState","name","public_repos","avatar_url","catch","e","log","handleChange","target","value","handleSubmit","preventDefault","getRepoDetails","loading","darkConvert","dark_style","i","document","style","repo_style","localStorage","setItem","getItem","repo_detail","oldRepoStyle","Boolean","repos","sortedRepos","sort","a","b","forks","stargazers_count","slice","repoNameArr","forkCountArr","starCountArr","repoDetailArr","forEach","element","push","forks_count","darkImg","whiteImg","onClick","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c2fc5a96.chunk.js","sourcesContent":["import React from 'react';\r\nimport './search.css'\r\n\r\nconst SearchBox = ({search, submit})=>{\r\n    return(\r\n       <div className=\"form\">\r\n           <form onSubmit={submit}>\r\n                <label>\r\n                    <input \r\n                        id=\"search-field\"\r\n                        type=\"text\" \r\n                        placeholder=\"Enter GitHub Username\"\r\n                        onChange={search}\r\n                    />\r\n                </label>\r\n               <input id=\"submit-btn\" type=\"submit\"/>\r\n           </form>\r\n       </div> \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport \"./repo.css\"\r\n\r\nconst RepoDetails = ({repo_name, fork_count, star_count, description, darkOrwhite})=>{\r\n    if(repo_name.length===0){\r\n        return null\r\n    }\r\n    else{\r\n        return(\r\n            <div id=\"repo\">\r\n                {repo_name.map((repo,index) => {\r\n                    return(\r\n                        <React.Fragment key={index}>\r\n                            <div className={darkOrwhite? darkOrwhite :\"white-repo-details\"}>\r\n                                <h2>{repo}</h2>\r\n                                <div className=\"fork-star\">\r\n                                    <p>Forks: {fork_count[index]}</p>\r\n                                    <p id=\"star\">Stars: {star_count[index]}</p>\r\n                                </div>\r\n                                <p id=\"description\"><em>{description[index]}</em></p>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )})}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RepoDetails;","import React from 'react';\r\nimport './user.css'\r\n\r\nconst UserDetails = ({username, followers, repo_count, user_dp, following})=>{\r\n    return(\r\n        <div className=\"user-details\">\r\n            <div className=\"user-photo\">\r\n                <img src={user_dp} alt={username}/>\r\n                <h3>{username}</h3>\r\n            </div>\r\n            <div className=\"other-details\">\r\n                <ul>\r\n                    {followers? <li>Followers: <span className=\"data\">{followers}</span></li>: null }\r\n                    {following? <li>Following: <span className=\"data\">{following}</span></li>: null }\r\n                    {repo_count? <li>Repositories: <span className=\"data\">{repo_count}</span></li>: null }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserDetails;","import React from \"react\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      console.error(error, errorInfo);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n  \r\n      return this.props.children; \r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary","import React from 'react';\nimport SearchBox from './components/SearchBox';\nimport RepoDetails from './components/RepoDetails';\nimport UserDetails from './components/UserDetails';\nimport './app.css';\nimport ErrorBoundary from './components/ErrorBoundary';\nconst darkStyle = {\n  body: {\n    color: \"#EAF0F1\",\n    backgroundImage: \"none\",\n    backgroundColor: \"#1b262c\",\n    textShadow: \"none\"\n  }\n}\n\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      id: \"\",\n      name: \"\",\n      username: \"\",\n      followers: \"\",\n      following: \"\",\n      repo_count: \"\",\n      user_dp: \"\",\n      repo_name: \"\",\n      fork_count: \"\",\n      star_count: \"\",\n      repo_detail: \"\",\n      dark_style: true,\n      repo_style: \"\",\n      loading: \"\",\n    }\n  }\n\n  componentDidMount(){\n    let oldRepoStyle = localStorage.getItem(\"local_repo_style\")\n    console.log(oldRepoStyle)\n    this.setState({dark_style: Boolean(oldRepoStyle)})\n  }\n\n  getUserDetails = (id)=>{\n    //get user information\n    const url = `https://api.github.com/users/${id}`;\n    if(this.state.id){\n      fetch(url)\n      .then(res => res.json())\n      .then(data=>{\n        this.setState({\n          username: data.name, \n          followers: data.followers, \n          repo_count: data.public_repos,\n          user_dp: data.avatar_url,\n          following: data.following\n        })\n      })\n      .catch(e=> console.log(e))\n    }\n  }\n  getRepoDetails(id){\n    //get repos detials of user and sort them\n    const repo = `https://api.github.com/users/${id}/repos`;\n    if(this.state.id){\n      fetch(repo)\n      .then(res => res.json())\n      .then(repos=>{\n        let sortedRepos = [...repos].sort((a,b) => {\n          return b.forks + b.stargazers_count - (a.forks + a.stargazers_count)\n        }).slice(0,4);\n        let repoNameArr = [];\n        let forkCountArr = [];\n        let starCountArr = [];\n        let repoDetailArr = [];  \n        sortedRepos.forEach(element => {\n          repoNameArr.push(element.name);\n          forkCountArr.push(element.forks_count);\n          starCountArr.push(element.stargazers_count);\n          if(element.description!==null){\n            repoDetailArr.push(element.description)\n          }\n          else{\n            repoDetailArr.push(\"No description\")\n          }\n        });\n        this.setState({\n          repo_name: repoNameArr,\n          fork_count: forkCountArr,\n          star_count: starCountArr,\n          description: repoDetailArr\n        })\n      })\n      .catch(e=> console.log(e))\n    }\n  }\n\n  handleChange = (e)=>{\n    this.setState({name: e.target.value})\n  }\n  handleSubmit = (e)=>{\n    e.preventDefault();\n    this.setState({id: this.state.name})\n    this.getUserDetails(this.state.id);\n    this.getRepoDetails(this.state.id);\n    this.setState({loading: false})\n  }\n\n  darkConvert = ()=>{\n    if(this.state.dark_style){\n      this.setState({dark_style: false})\n      for(let i in darkStyle.body){\n        document.body.style[i] = darkStyle.body[i];\n      }\n      let darkRepoStyle = \"dark-repo-details\";\n      this.setState({repo_style: darkRepoStyle})\n      localStorage.setItem(\"local_repo_style\", false)\n    }\n    else{\n      this.setState({dark_style: true})\n      document.body.style.backgroundColor = \"#DAE0E2\";\n      document.body.style.color = \"black\";\n      let whiteRepoStyle = \"white-repo-details\";\n      this.setState({repo_style: whiteRepoStyle})\n      localStorage.setItem(\"local_repo_style\", true)\n    }\n    console.log(localStorage.getItem(\"local_repo_style\"))\n  }\n\n  render(){\n    const {username, followers, repo_count, user_dp, description,repo_name, fork_count, star_count, loading,following, repo_style,dark_style} = this.state;\n    const darkImg = \"https://img.icons8.com/pastel-glyph/64/000000/planet-on-the-dark-side.png\";\n    const whiteImg = \"https://img.icons8.com/cotton/64/000000/planet-on-the-dark-side.png\"\n    if(loading){\n      return(\n        <div>\n          <div className=\"heading-main\">\n            <h1 id=\"heading\">Github Profile Finder</h1>\n            <h2 onClick={this.darkConvert} id=\"dark\">\n              {!dark_style? <img src={whiteImg} alt=\"DarkMode\"/> : <img src={darkImg} alt=\"WhiteMode\"/> }\n            </h2>\n          </div>\n          <h2>loading...</h2>\n        </div>\n      )\n    }\n    else{\n      return(\n        <div>\n          <div className=\"heading-main\">\n            <h1 id=\"heading\">Github Profile Finder</h1>\n            <h2 onClick={this.darkConvert} id=\"dark\">\n              {!dark_style? <img src={whiteImg} alt=\"DarkMode\"/> : <img src={darkImg} alt=\"WhiteMode\"/> }\n            </h2>\n          </div>\n          <ErrorBoundary>\n            <SearchBox search={this.handleChange} submit ={this.handleSubmit}/>\n          </ErrorBoundary>\n          <ErrorBoundary>\n            <div className=\"user-repo\">\n              <UserDetails username={username} followers={followers} repo_count={repo_count} user_dp={user_dp} following={following}/>\n              <RepoDetails description={description} repo_name={repo_name} fork_count={fork_count} star_count={star_count} darkOrwhite={repo_style} />\n            </div>\n          </ErrorBoundary>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}